<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Word Chain Password Generator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 500px;
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .slang-preview {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
        }

        .slang-preview h3 {
            color: #667eea;
            margin-bottom: 10px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .slang-item {
            display: inline-block;
            background: white;
            padding: 5px 10px;
            margin: 3px;
            border-radius: 15px;
            font-size: 12px;
            border: 1px solid #e9ecef;
            transition: all 0.2s ease;
        }

        .slang-item:hover {
            border-color: #667eea;
            transform: translateY(-1px);
            box-shadow: 0 2px 5px rgba(102, 126, 234, 0.2);
        }

        .slang-chinese {
            color: #495057;
            font-weight: 600;
        }

        .slang-pinyin {
            color: #6c757d;
            font-size: 11px;
            margin-left: 5px;
        }

        .password-display {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            position: relative;
            transition: all 0.3s ease;
        }

        .password-display:hover {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        #generatedPassword {
            font-family: 'Courier New', monospace;
            font-size: 16px;
            word-break: break-all;
            color: #495057;
            line-height: 1.5;
            min-height: 24px;
        }

        #chineseDisplay {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Microsoft YaHei', 'ÂæÆËΩØÈõÖÈªë', sans-serif;
            font-size: 14px;
            color: #6c757d;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #e9ecef;
            line-height: 1.5;
        }

        .chinese-label {
            color: #667eea;
            font-weight: 500;
            margin-right: 5px;
        }

        .copy-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .copy-btn:hover {
            background: #5a67d8;
            transform: translateY(-2px);
        }

        .copy-btn.copied {
            background: #48bb78;
        }

        .options {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .option-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            color: #495057;
            font-weight: 500;
            margin-bottom: 5px;
            font-size: 14px;
        }

        input[type="number"], select {
            width: 100%;
            padding: 8px 12px;
            border: 2px solid #e9ecef;
            border-radius: 5px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        input[type="number"]:focus, select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        input[type="checkbox"] {
            width: 18px;
            height: 18px;
            margin-right: 8px;
            cursor: pointer;
        }

        .checkbox-group label {
            margin-bottom: 0;
            cursor: pointer;
            user-select: none;
        }

        .generate-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .generate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .generate-btn:active {
            transform: translateY(0);
        }

        .strength-meter {
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .strength-label {
            font-size: 14px;
            color: #495057;
            margin-bottom: 8px;
        }

        .strength-bar {
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            transition: all 0.5s ease;
            border-radius: 4px;
        }

        .strength-text {
            margin-top: 8px;
            font-size: 14px;
            font-weight: 600;
            text-align: center;
        }

        .weak { background: #f56565; color: #f56565; }
        .fair { background: #ed8936; color: #ed8936; }
        .good { background: #ecc94b; color: #ecc94b; }
        .strong { background: #48bb78; color: #48bb78; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîê Word Chain Password Generator ÂØÜÁ†ÅÁîüÊàêÂô®</h1>
        
        <div class="password-display">
            <div id="generatedPassword">Click "Generate Password" to create a new password</div>
            <div id="chineseDisplay"></div>
            <button class="copy-btn" onclick="copyPassword()">Copy</button>
        </div>

        <div class="slang-preview" id="slangPreview">
            <h3>Popular Slang Examples ÊµÅË°åËØ≠Á§∫‰æã üè≥Ô∏è‚Äçüåà</h3>
            <div id="slangExamples">
                <span class="slang-item"><span class="slang-chinese">Âü∫Âèã</span><span class="slang-pinyin">ji-you</span></span>
                <span class="slang-item"><span class="slang-chinese">Â∞èÈ≤úËÇâ</span><span class="slang-pinyin">xiao-xian-rou</span></span>
                <span class="slang-item"><span class="slang-chinese">0Âè∑</span><span class="slang-pinyin">ling-hao</span></span>
                <span class="slang-item"><span class="slang-chinese">1Âè∑</span><span class="slang-pinyin">yi-hao</span></span>
                <span class="slang-item"><span class="slang-chinese">ÂêåÂøó</span><span class="slang-pinyin">tong-zhi</span></span>
                <span class="slang-item"><span class="slang-chinese">ËêåËêåÂìí</span><span class="slang-pinyin">meng-meng-da</span></span>
                <span class="slang-item"><span class="slang-chinese">‰πà‰πàÂìí</span><span class="slang-pinyin">me-me-da</span></span>
                <span class="slang-item"><span class="slang-chinese">Â∞èÁãºÁãó</span><span class="slang-pinyin">xiao-lang-gou</span></span>
                <span class="slang-item"><span class="slang-chinese">Â∞èÂ•∂Áãó</span><span class="slang-pinyin">xiao-nai-gou</span></span>
                <span class="slang-item"><span class="slang-chinese">Êµ∑Áéã</span><span class="slang-pinyin">hai-wang</span></span>
                <span class="slang-item"><span class="slang-chinese">Âè´Áà∏Áà∏</span><span class="slang-pinyin">jiao-ba-ba</span></span>
                <span class="slang-item"><span class="slang-chinese">Ë∞¢Ë∞¢ËÄÅÊùø</span><span class="slang-pinyin">xie-xie-lao-ban</span></span>
                <span class="slang-item"><span class="slang-chinese">ÁªùÁªùÂ≠ê</span><span class="slang-pinyin">jue-jue-zi</span></span>
                <span class="slang-item"><span class="slang-chinese">Á†¥Èò≤</span><span class="slang-pinyin">po-fang</span></span>
                <span class="slang-item"><span class="slang-chinese">Ë∫∫Âπ≥</span><span class="slang-pinyin">tang-ping</span></span>
                <span class="slang-item"><span class="slang-chinese">ÂÜÖÂç∑</span><span class="slang-pinyin">nei-juan</span></span>
                <span class="slang-item"><span class="slang-chinese">‰º™Â®ò</span><span class="slang-pinyin">wei-niang</span></span>
                <span class="slang-item"><span class="slang-chinese">ËÖêÂ•≥</span><span class="slang-pinyin">fu-nv</span></span>
                <span class="slang-item"><span class="slang-chinese">ËÄΩÁæé</span><span class="slang-pinyin">dan-mei</span></span>
                <span class="slang-item"><span class="slang-chinese">Á∫¶ÁÇÆ</span><span class="slang-pinyin">yue-pao</span></span>
            </div>
        </div>

        <div class="options">
            <div class="option-group">
                <label for="passwordStyle">Password Style:</label>
                <select id="passwordStyle" onchange="toggleOptions()">
                    <option value="wordchain">Word Chain (Original)</option>
                    <option value="sentence">Chinese Sentence + Number + English</option>
                    <option value="custom">Custom Combination</option>
                </select>
            </div>

            <div id="wordChainOptions">
                <div class="option-group">
                    <label for="wordCount">Number of Words:</label>
                    <input type="number" id="wordCount" min="2" max="6" value="3">
                </div>

                <div class="option-group">
                    <label for="wordLanguage">Word Language:</label>
                    <select id="wordLanguage" onchange="updateWordList()">
                        <option value="english">English Only</option>
                        <option value="pinyin">Chinese Pinyin Only</option>
                        <option value="mixed">Mixed (English + Pinyin)</option>
                    </select>
                </div>

                <div class="option-group">
                    <label for="caseStyle">Case Style:</label>
                    <select id="caseStyle">
                        <option value="mixed">Mixed Case (Random)</option>
                        <option value="title">Title Case</option>
                        <option value="alternate">Alternating Case</option>
                        <option value="first">First Word Capital</option>
                    </select>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="includeNumbers" checked>
                    <label for="includeNumbers">Include Numbers</label>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="includeSpecial" checked>
                    <label for="includeSpecial">Include Special Characters (!@#)</label>
                </div>

                <div class="option-group">
                    <label for="specialPosition">Special Character Position:</label>
                    <select id="specialPosition">
                        <option value="end">At the End</option>
                        <option value="between">Between Words</option>
                        <option value="random">Random Position</option>
                    </select>
                </div>
            </div>

            <div id="sentenceOptions" style="display:none;">
                <div class="option-group">
                    <label for="sentenceType">Sentence Type:</label>
                    <select id="sentenceType">
                        <option value="random">Random ÈöèÊú∫</option>
                        <option value="emotional">Emotional/Love ÊÉÖÊÑü/Áà±ÊÉÖ</option>
                        <option value="family">Family ÂÆ∂Â∫≠</option>
                        <option value="daily">Daily Life Êó•Â∏∏ÁîüÊ¥ª</option>
                        <option value="work">Work/Success Â∑•‰Ωú/ÊàêÂäü</option>
                        <option value="motivational">Motivational Âä±Âøó</option>
                        <option value="casual">Fun/Casual ÊúâË∂£/‰ºëÈó≤</option>
                        <option value="slang">Internet Slang/Gay Culture ÁΩëÁªúÁî®ËØ≠/ÂêåÂøóÊñáÂåñ üè≥Ô∏è‚Äçüåà</option>
                    </select>
                </div>

                <div class="option-group">
                    <label for="numberLength">Number Chain Length:</label>
                    <input type="number" id="numberLength" min="2" max="6" value="4">
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="capitalizeEnglish" checked>
                    <label for="capitalizeEnglish">Capitalize English Word</label>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="includeSpecialSentence" checked>
                    <label for="includeSpecialSentence">Include Special Character (!@#)</label>
                </div>
            </div>

            <div id="customOptions" style="display:none;">
                <div class="option-group">
                    <label>Select Elements (1-4):</label>
                    <div class="checkbox-group">
                        <input type="checkbox" id="useChineseSentence" checked>
                        <label for="useChineseSentence">Chinese Sentence/Slang</label>
                    </div>
                    <div class="checkbox-group">
                        <input type="checkbox" id="useEnglishWords" checked>
                        <label for="useEnglishWords">English Word(s)</label>
                    </div>
                    <div class="checkbox-group">
                        <input type="checkbox" id="usePinyinWords">
                        <label for="usePinyinWords">Pinyin Word(s)</label>
                    </div>
                    <div class="checkbox-group">
                        <input type="checkbox" id="useNumberChain" checked>
                        <label for="useNumberChain">Number Chain</label>
                    </div>
                </div>

                <div class="option-group">
                    <label for="elementOrder">Element Order:</label>
                    <select id="elementOrder">
                        <option value="random">Random Order</option>
                        <option value="as-selected">As Selected Above</option>
                        <option value="sentence-first">Chinese Sentence First</option>
                        <option value="numbers-last">Numbers Last</option>
                        <option value="english-first">English First</option>
                    </select>
                </div>

                <div class="option-group">
                    <label for="customSentenceType">Chinese Sentence Type:</label>
                    <select id="customSentenceType">
                        <option value="random">Random ÈöèÊú∫</option>
                        <option value="emotional">Emotional/Love ÊÉÖÊÑü/Áà±ÊÉÖ</option>
                        <option value="family">Family ÂÆ∂Â∫≠</option>
                        <option value="daily">Daily Life Êó•Â∏∏ÁîüÊ¥ª</option>
                        <option value="work">Work/Success Â∑•‰Ωú/ÊàêÂäü</option>
                        <option value="motivational">Motivational Âä±Âøó</option>
                        <option value="casual">Fun/Casual ÊúâË∂£/‰ºëÈó≤</option>
                        <option value="slang">Internet Slang/Gay Culture ÁΩëÁªúÁî®ËØ≠/ÂêåÂøóÊñáÂåñ üè≥Ô∏è‚Äçüåà</option>
                    </select>
                </div>

                <div class="option-group">
                    <label for="customWordCount">Words per Type:</label>
                    <input type="number" id="customWordCount" min="1" max="3" value="1">
                </div>

                <div class="option-group">
                    <label for="customNumberLength">Number Length:</label>
                    <input type="number" id="customNumberLength" min="1" max="6" value="3">
                </div>

                <div class="option-group">
                    <label for="customCaseStyle">Case Style:</label>
                    <select id="customCaseStyle">
                        <option value="mixed">Mixed Case</option>
                        <option value="lower">All Lowercase</option>
                        <option value="title">Title Case</option>
                        <option value="first">First Capital Only</option>
                    </select>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="customIncludeSpecial" checked>
                    <label for="customIncludeSpecial">Include Special Character (!@#)</label>
                </div>

                <div class="option-group">
                    <label for="customSeparator">Separator:</label>
                    <select id="customSeparator">
                        <option value="-">Hyphen (-)</option>
                        <option value="_">Underscore (_)</option>
                        <option value=".">Period (.)</option>
                        <option value="">No Separator</option>
                        <option value="mixed">Mixed Separators</option>
                    </select>
                </div>
            </div>
        </div>

        <button class="generate-btn" onclick="generatePassword()">Generate Password</button>

        <div class="strength-meter">
            <div class="strength-label">Password Strength:</div>
            <div class="strength-bar">
                <div class="strength-fill" id="strengthFill"></div>
            </div>
            <div class="strength-text" id="strengthText">-</div>
        </div>
    </div>

    <script>
        const englishWords = [
            'apple', 'banana', 'cherry', 'dragon', 'eagle', 'forest', 'galaxy', 'hammer',
            'island', 'jungle', 'knight', 'lemon', 'mountain', 'nebula', 'ocean', 'phoenix',
            'quantum', 'rocket', 'silver', 'thunder', 'unicorn', 'valley', 'wizard', 'yellow',
            'zebra', 'alpha', 'bravo', 'charlie', 'delta', 'echo', 'foxtrot', 'gamma',
            'hotel', 'india', 'juliet', 'kilo', 'lima', 'metro', 'nova', 'oscar',
            'paper', 'quebec', 'romeo', 'sierra', 'tango', 'ultra', 'victor', 'whiskey',
            'xray', 'yankee', 'zulu', 'beacon', 'cascade', 'diamond', 'ember', 'flame',
            'glacier', 'harbor', 'impact', 'jasper', 'kindle', 'lunar', 'marble', 'nexus',
            'orbit', 'prism', 'quartz', 'radar', 'solar', 'titan', 'umbra', 'vortex',
            'winter', 'xenon', 'yield', 'zenith', 'atomic', 'binary', 'cipher', 'digital',
            'energy', 'fusion', 'global', 'hybrid', 'ionic', 'joker', 'kernel', 'logic',
            'matrix', 'neural', 'optic', 'photon', 'quasar', 'radius', 'static', 'turbo',
            'unity', 'vertex', 'widget', 'xerox', 'yonder', 'zodiac'
        ];

        const pinyinWords = [
            // People & Relationships
            'pengyou', 'jiaren', 'laoshi', 'xuesheng', 'tongxue', 'lingdao', 'tongshi', 'kehu',
            'haizi', 'fumu', 'xiongdi', 'jiemei', 'airen', 'fuqi', 'nanyou', 'nvyou',
            
            // Common Objects & Things
            'diannao', 'shouji', 'qiche', 'zixingche', 'feiji', 'huoche', 'ditie', 'gongjiao',
            'fangzi', 'xuexiao', 'yiyuan', 'chaoshi', 'fandian', 'jiudian', 'gongyuan', 'tushuguan',
            'canting', 'kafei', 'chengshi', 'xiangcun', 'malu', 'jiedao', 'guangchang', 'shangdian',
            
            // Nature & Weather
            'tianqi', 'taiyang', 'yueliang', 'xingxing', 'baiyun', 'xiayu', 'xiaxue', 'dafeng',
            'chunfeng', 'xiyang', 'shulin', 'haiyang', 'gaoshen', 'caodi', 'huayuan', 'senlin',
            
            // Time
            'jintian', 'mingtian', 'zuotian', 'xianzai', 'yiqian', 'yihou', 'zaoshang', 'wanshang',
            'zhongwu', 'xiawu', 'shangwu', 'yewan', 'zhoumo', 'xingqi', 'yuefeng', 'nianfen',
            
            // Activities & Actions
            'gongzuo', 'xuexi', 'yundong', 'youxi', 'lvyou', 'goumai', 'chifan', 'shuijiao',
            'paobu', 'youyong', 'tiaouu', 'changge', 'tingge', 'kanshu', 'xiezuo', 'huihua',
            
            // Feelings & Descriptors
            'kuaile', 'xingfu', 'nanguo', 'shengqi', 'danxin', 'gaoxing', 'pinggan', 'xihuan',
            'reai', 'haipa', 'jingya', 'gandong', 'meili', 'piaoliang', 'congming', 'yonggan',
            
            // Food & Drink
            'pingguo', 'xiangjiao', 'putao', 'xigua', 'caomei', 'juzi', 'ningmeng', 'lizhi',
            'mifan', 'miantiao', 'baozi', 'jiaozi', 'mantou', 'dongxi', 'shiwu', 'yinliao',
            
            // Technology & Modern Life
            'wangluo', 'hulian', 'ruanjian', 'yingjian', 'shuju', 'xinxi', 'anquan', 'mima',
            'youjian', 'duanxin', 'shipin', 'tupian', 'wenjian', 'xiazai', 'shangchuan', 'baocun',
            
            // Business & Work
            'gongsi', 'bangong', 'huiyi', 'baogao', 'jihua', 'xiangmu', 'tuandui', 'hezuo',
            'shichang', 'xiaoshou', 'chanpin', 'fuwu', 'guanli', 'jingli', 'zhiyuan', 'mubiao',
            
            // Common Adjectives/States
            'zhongyao', 'tebie', 'putong', 'jiandan', 'fuza', 'qingchu', 'mingbai', 'wanzheng',
            'chenggong', 'shibai', 'jinbu', 'fazhan', 'bianhua', 'wending', 'anquan', 'weixian'
        ];

        // Chinese sentences in pinyin (with meanings as comments)
        const chineseSentences = [
            // Emotional/Relationship
            'wo-ai-ni',           // ÊàëÁà±‰Ω† - I love you
            'wo-bu-ai-ni',        // Êàë‰∏çÁà±‰Ω† - I don't love you
            'wo-xiang-ni',        // ÊàëÊÉ≥‰Ω† - I miss you
            'ni-zhen-hao',        // ‰Ω†ÁúüÂ•Ω - You're really nice
            'wo-hen-kai-xin',     // ÊàëÂæàÂºÄÂøÉ - I'm very happy
            'zhen-de-ma',         // ÁúüÁöÑÂêó - Really?
            
            // Family & People
            'lao-gong-zui-bang',  // ËÄÅÂÖ¨ÊúÄÊ£í - Husband is the best
            'lao-po-zui-mei',     // ËÄÅÂ©ÜÊúÄÁæé - Wife is most beautiful
            'bao-bei-guai',       // ÂÆùË¥ù‰πñ - Baby be good
            'ma-ma-ai-ni',        // Â¶àÂ¶àÁà±‰Ω† - Mom loves you
            'ba-ba-hen-mang',     // Áà∏Áà∏ÂæàÂøô - Dad is very busy
            
            // Daily Life
            'wo-yao-chi-fan',     // ÊàëË¶ÅÂêÉÈ•≠ - I want to eat
            'wo-bu-zhi-dao',      // Êàë‰∏çÁü•ÈÅì - I don't know
            'wo-hui-jia-le',      // ÊàëÂõûÂÆ∂‰∫Ü - I'm going home
            'jin-tian-hen-lei',   // ‰ªäÂ§©ÂæàÁ¥Ø - Today is tiring
            'ming-tian-jian',     // ÊòéÂ§©ËßÅ - See you tomorrow
            'wan-an-hao-meng',    // ÊôöÂÆâÂ•ΩÊ¢¶ - Good night sweet dreams
            'zao-shang-hao',      // Êó©‰∏äÂ•Ω - Good morning
            
            // Work & Success
            'jia-you-jia-you',    // Âä†Ê≤πÂä†Ê≤π - Keep going!
            'yi-qi-nu-li',        // ‰∏ÄËµ∑Âä™Âäõ - Work hard together
            'ma-shang-dao',       // È©¨‰∏äÂà∞ - Arriving soon
            'gong-xi-fa-cai',     // ÊÅ≠ÂñúÂèëË¥¢ - Congratulations and prosperity
            'wan-shi-ru-yi',      // ‰∏á‰∫ãÂ¶ÇÊÑè - Everything goes well
            'shen-ti-jian-kang',  // Ë∫´‰ΩìÂÅ•Â∫∑ - Good health
            
            // Feelings & States
            'wo-hen-hao',         // ÊàëÂæàÂ•Ω - I'm fine
            'mei-guan-xi',        // Ê≤°ÂÖ≥Á≥ª - It's okay
            'bu-yong-xie',        // ‰∏çÁî®Ë∞¢ - You're welcome
            'dui-bu-qi',          // ÂØπ‰∏çËµ∑ - Sorry
            'xie-xie-ni',         // Ë∞¢Ë∞¢‰Ω† - Thank you
            'qing-bang-wo',       // ËØ∑Â∏ÆÊàë - Please help me
            
            // Fun & Casual
            'tai-hao-le',         // Â§™Â•Ω‰∫Ü - That's great
            'zen-me-ban',         // ÊÄé‰πàÂäû - What to do
            'wei-shen-me',        // ‰∏∫‰ªÄ‰πà - Why
            'wo-dong-le',         // ÊàëÊáÇ‰∫Ü - I understand
            'ting-bu-dong',       // Âê¨‰∏çÊáÇ - Don't understand
            'kan-bu-jian',        // Áúã‰∏çËßÅ - Can't see
            'peng-you-hao',       // ÊúãÂèãÂ•Ω - Hello friend
            
            // Motivational
            'yong-bu-fang-qi',    // Ê∞∏‰∏çÊîæÂºÉ - Never give up
            'xiang-xin-zi-ji',    // Áõ∏‰ø°Ëá™Â∑± - Believe in yourself
            'mei-tian-jin-bu',    // ÊØèÂ§©ËøõÊ≠• - Progress every day
            'hao-hao-xue-xi',     // Â•ΩÂ•ΩÂ≠¶‰π† - Study well
            'tian-tian-xiang-shang', // Â§©Â§©Âêë‰∏ä - Improve every day
            
            // Questions & Responses
            'ni-hao-ma',          // ‰Ω†Â•ΩÂêó - How are you?
            'chi-fan-le-ma',      // ÂêÉÈ•≠‰∫ÜÂêó - Have you eaten?
            'qu-na-li',           // ÂéªÂì™Èáå - Where to go?
            'shen-me-shi-hou',    // ‰ªÄ‰πàÊó∂ÂÄô - When?
            'duo-shao-qian',      // Â§öÂ∞ëÈí± - How much?
            'neng-bu-neng',       // ËÉΩ‰∏çËÉΩ - Can or cannot?
            
            // Fun Slang & Internet Terms (User Requested)
            'si-gay',             // Ê≠ªgay - Slang term
            'tu-hao',             // ÂúüË±™ - Rich/nouveau riche
            'ai-ya-yo',           // ÂìéÂëÄÂìü - Oh my!
            'pian-pian-ta',       // ÂÅèÂÅè‰ªñ - It had to be him
            'shan-hu-hai',        // Â±±ÂëºÊµ∑ - Mountains and seas
            'yao-jing',           // Â¶ñÁ≤æ - Demon/vixen
            'shen-jing-bing',     // Á•ûÁªèÁóÖ - Crazy/nuts
            
            // Fun & Flirty Slang
            'xie-xie-lao-ban',    // Ë∞¢Ë∞¢ËÄÅÊùø - Thank you boss (playful)
            'jiao-ba-ba',         // Âè´Áà∏Áà∏ - Call me daddy
            'xiao-xian-rou',      // Â∞èÈ≤úËÇâ - Young fresh meat (young handsome guy)
            'xiao-jie-jie',       // Â∞èÂßêÂßê - Little sister (cute girl)
            'xiao-ge-ge',         // Â∞èÂì•Âì• - Little brother (cute guy)
            'bao-bei-er',         // ÂÆùË¥ùÂÑø - Baby/darling
            'qin-ai-de',          // ‰∫≤Áà±ÁöÑ - Dear/honey
            'meng-meng-da',       // ËêåËêåÂìí - Super cute
            'me-me-da',           // ‰πà‰πàÂìí - Kiss kiss
            'ai-ni-yo',           // Áà±‰Ω†Âìü - Love you~
            'hao-ke-ai',          // Â•ΩÂèØÁà± - So cute
            'shuai-ge',           // Â∏ÖÂì• - Handsome guy
            'mei-nv',             // ÁæéÂ•≥ - Beautiful woman
            'da-zhu',             // Â§ßÁå™ - Big pig (playful insult)
            'xiao-ke-ai',         // Â∞èÂèØÁà± - Little cutie
            'lao-tie',            // ËÄÅÈìÅ - Old iron (buddy)
            'bao-bao',            // ÂÆùÂÆù - Baby
            'qiu-qiu-ni',         // Ê±ÇÊ±Ç‰Ω† - Please please
            'hao-bang-a',         // Â•ΩÊ£íÂïä - So awesome
            'zhen-xiang',         // ÁúüÈ¶ô - So good (ironic)
            'niu-bi',             // ÁâõÈÄº - Awesome/badass
            'liu-liu-liu',        // 666 - Awesome (sounds like)
            'ba-ba-ba',           // 888 - Bye bye (sounds like)
            'jiu-jiu-wo',         // ÊïëÊïëÊàë - Save me
            'tai-ku-la',          // Â§™ÈÖ∑Âï¶ - So cool
            'chao-ji-bang',       // Ë∂ÖÁ∫ßÊ£í - Super great
            'ni-zui-hao',         // ‰Ω†ÊúÄÂ•Ω - You're the best
            'wo-cao',             // ÊàëÊìç - WTF/damn
            'bu-yao-lian',        // ‰∏çË¶ÅËÑ∏ - Shameless
            'gun-dan',            // ÊªöËõã - Get lost
            'ni-xing-ma',         // ‰Ω†Ë°åÂêó - Can you do it?
            'jue-jue-zi',         // ÁªùÁªùÂ≠ê - Absolutely amazing
            'nei-juan',           // ÂÜÖÂç∑ - Involution/rat race
            'tang-ping',          // Ë∫∫Âπ≥ - Lying flat (giving up)
            'po-fang',            // Á†¥Èò≤ - Defense broken (emotionally moved)
            'gan-jiu-wan-shi',    // Âπ≤Â∞±ÂÆå‰∫ã - Just do it
            
            // Gay Culture & Flirty Slang
            'ling-hao',           // 0Âè∑ - Bottom (0)
            'yi-hao',             // 1Âè∑ - Top (1)
            'ling-dian-wu',       // 0.5 - Versatile
            'tong-zhi',           // ÂêåÂøó - Comrade (gay)
            'ji-you',             // Âü∫Âèã - Gay friend
            'gao-ji',             // ÊêûÂü∫ - Gay activities
            'wan-wan',            // ÂºØÂºØ - Gay (bent)
            'zhi-nan',            // Áõ¥Áî∑ - Straight guy
            'shou-shou',          // ÂèóÂèó - Bottom
            'gong-gong',          // ÊîªÊîª - Top
            'xiao-shou',          // Â∞èÂèó - Little bottom
            'xiao-gong',          // Â∞èÊîª - Little top
            'niang-pao',          // Â®òÁÇÆ - Femme/sissy
            'tie-t',              // ÈìÅT - Butch lesbian
            'p-p',                // PP - Femme lesbian
            'la-la',              // ÊãâÊãâ - Lesbian
            'bai-he',             // ÁôæÂêà - Lily (lesbian)
            'dan-mei',            // ËÄΩÁæé - BL/yaoi
            'fu-nv',              // ËÖêÂ•≥ - Fujoshi (BL fan)
            'sao-huo',            // È™öË¥ß - Slutty
            'yue-pao',            // Á∫¶ÁÇÆ - Hookup
            'kai-fang',           // ÂºÄÊàø - Get a room
            'gun-chuang',         // ÊªöÂ∫ä - Roll in bed
            'chi-dou-fu',         // ÂêÉË±ÜËÖê - Eat tofu (flirt/touch)
            'gou-yin',            // ÂãæÂºï - Seduce
            'tiao-qing',          // Ë∞ÉÊÉÖ - Flirt
            'sao-rao',            // È™öÊâ∞ - Harass (playful)
            'hao-se',             // Â•ΩËâ≤ - Horny/lustful
            'se-lang',            // Ëâ≤Áãº - Pervert wolf
            'lao-se-pi',          // ËÄÅËâ≤Êâπ - Old pervert
            'xiao-lang-gou',      // Â∞èÁãºÁãó - Little wolf dog (young dom)
            'xiao-nai-gou',       // Â∞èÂ•∂Áãó - Little milk dog (young sub)
            'da-zhu-ti',          // Â§ßÁå™ËπÑ - Big pig feet (player)
            'hai-wang',           // Êµ∑Áéã - Sea king (player)
            'lv-cha',             // ÁªøËå∂ - Green tea (manipulative)
            'bai-lian-hua',       // ÁôΩËé≤Ëä± - White lotus (fake innocent)
            'xin-ji-biao',        // ÂøÉÊú∫Â©ä - Scheming bitch
            'jian-nan',           // Ë¥±Áî∑ - Trashy guy
            'jian-nv',            // Ë¥±Â•≥ - Trashy girl
            'shuang-xing-lian',   // ÂèåÊÄßÊÅã - Bisexual
            'kua-xing-bie',       // Ë∑®ÊÄßÂà´ - Transgender
            'bian-zhuang',        // ÂèòË£Ö - Drag/crossdress
            'wei-niang',          // ‰º™Â®ò - Femboy
            'nan-shen',           // Áî∑Á•û - Male god (crush)
            'nv-shen',            // Â•≥Á•û - Female goddess (crush)
            'ou-ba',              // Ê¨ßÂ∑¥ - Oppa (Korean daddy)
            'da-da',              // Â§ßÂ§ß - Big big (dom)
            'xiao-xiao',          // Â∞èÂ∞è - Little little (sub)
            'zhu-ren',            // ‰∏ª‰∫∫ - Master
            'nu-li',              // Â•¥Èö∂ - Slave
            'gou-gou',            // ÁãóÁãó - Doggy
            'mao-mao',            // Áå´Áå´ - Kitty
        ];

        let wordList = [...englishWords];

        const specialChars = ['!', '@', '#'];

        // Map of pinyin to Chinese characters
        const pinyinToCharacters = {
            // Emotional/Relationship
            'wo-ai-ni': 'ÊàëÁà±‰Ω†',
            'wo-bu-ai-ni': 'Êàë‰∏çÁà±‰Ω†',
            'wo-xiang-ni': 'ÊàëÊÉ≥‰Ω†',
            'ni-zhen-hao': '‰Ω†ÁúüÂ•Ω',
            'wo-hen-kai-xin': 'ÊàëÂæàÂºÄÂøÉ',
            'zhen-de-ma': 'ÁúüÁöÑÂêó',
            
            // Family & People
            'lao-gong-zui-bang': 'ËÄÅÂÖ¨ÊúÄÊ£í',
            'lao-po-zui-mei': 'ËÄÅÂ©ÜÊúÄÁæé',
            'bao-bei-guai': 'ÂÆùË¥ù‰πñ',
            'ma-ma-ai-ni': 'Â¶àÂ¶àÁà±‰Ω†',
            'ba-ba-hen-mang': 'Áà∏Áà∏ÂæàÂøô',
            
            // Daily Life
            'wo-yao-chi-fan': 'ÊàëË¶ÅÂêÉÈ•≠',
            'wo-bu-zhi-dao': 'Êàë‰∏çÁü•ÈÅì',
            'wo-hui-jia-le': 'ÊàëÂõûÂÆ∂‰∫Ü',
            'jin-tian-hen-lei': '‰ªäÂ§©ÂæàÁ¥Ø',
            'ming-tian-jian': 'ÊòéÂ§©ËßÅ',
            'wan-an-hao-meng': 'ÊôöÂÆâÂ•ΩÊ¢¶',
            'zao-shang-hao': 'Êó©‰∏äÂ•Ω',
            
            // Work & Success
            'jia-you-jia-you': 'Âä†Ê≤πÂä†Ê≤π',
            'yi-qi-nu-li': '‰∏ÄËµ∑Âä™Âäõ',
            'ma-shang-dao': 'È©¨‰∏äÂà∞',
            'gong-xi-fa-cai': 'ÊÅ≠ÂñúÂèëË¥¢',
            'wan-shi-ru-yi': '‰∏á‰∫ãÂ¶ÇÊÑè',
            'shen-ti-jian-kang': 'Ë∫´‰ΩìÂÅ•Â∫∑',
            
            // Feelings & States
            'wo-hen-hao': 'ÊàëÂæàÂ•Ω',
            'mei-guan-xi': 'Ê≤°ÂÖ≥Á≥ª',
            'bu-yong-xie': '‰∏çÁî®Ë∞¢',
            'dui-bu-qi': 'ÂØπ‰∏çËµ∑',
            'xie-xie-ni': 'Ë∞¢Ë∞¢‰Ω†',
            'qing-bang-wo': 'ËØ∑Â∏ÆÊàë',
            
            // Fun & Casual
            'tai-hao-le': 'Â§™Â•Ω‰∫Ü',
            'zen-me-ban': 'ÊÄé‰πàÂäû',
            'wei-shen-me': '‰∏∫‰ªÄ‰πà',
            'wo-dong-le': 'ÊàëÊáÇ‰∫Ü',
            'ting-bu-dong': 'Âê¨‰∏çÊáÇ',
            'kan-bu-jian': 'Áúã‰∏çËßÅ',
            'peng-you-hao': 'ÊúãÂèãÂ•Ω',
            
            // Motivational
            'yong-bu-fang-qi': 'Ê∞∏‰∏çÊîæÂºÉ',
            'xiang-xin-zi-ji': 'Áõ∏‰ø°Ëá™Â∑±',
            'mei-tian-jin-bu': 'ÊØèÂ§©ËøõÊ≠•',
            'hao-hao-xue-xi': 'Â•ΩÂ•ΩÂ≠¶‰π†',
            'tian-tian-xiang-shang': 'Â§©Â§©Âêë‰∏ä',
            
            // Questions & Responses
            'ni-hao-ma': '‰Ω†Â•ΩÂêó',
            'chi-fan-le-ma': 'ÂêÉÈ•≠‰∫ÜÂêó',
            'qu-na-li': 'ÂéªÂì™Èáå',
            'shen-me-shi-hou': '‰ªÄ‰πàÊó∂ÂÄô',
            'duo-shao-qian': 'Â§öÂ∞ëÈí±',
            'neng-bu-neng': 'ËÉΩ‰∏çËÉΩ',
            
            // Fun Slang & Internet Terms
            'si-gay': 'Ê≠ªgay',
            'tu-hao': 'ÂúüË±™',
            'ai-ya-yo': 'ÂìéÂëÄÂìü',
            'pian-pian-ta': 'ÂÅèÂÅè‰ªñ',
            'shan-hu-hai': 'Â±±ÂëºÊµ∑',
            'yao-jing': 'Â¶ñÁ≤æ',
            'shen-jing-bing': 'Á•ûÁªèÁóÖ',
            
            // Fun & Flirty Slang
            'xie-xie-lao-ban': 'Ë∞¢Ë∞¢ËÄÅÊùø',
            'jiao-ba-ba': 'Âè´Áà∏Áà∏',
            'xiao-xian-rou': 'Â∞èÈ≤úËÇâ',
            'xiao-jie-jie': 'Â∞èÂßêÂßê',
            'xiao-ge-ge': 'Â∞èÂì•Âì•',
            'bao-bei-er': 'ÂÆùË¥ùÂÑø',
            'qin-ai-de': '‰∫≤Áà±ÁöÑ',
            'meng-meng-da': 'ËêåËêåÂìí',
            'me-me-da': '‰πà‰πàÂìí',
            'ai-ni-yo': 'Áà±‰Ω†Âìü',
            'hao-ke-ai': 'Â•ΩÂèØÁà±',
            'shuai-ge': 'Â∏ÖÂì•',
            'mei-nv': 'ÁæéÂ•≥',
            'da-zhu': 'Â§ßÁå™',
            'xiao-ke-ai': 'Â∞èÂèØÁà±',
            'lao-tie': 'ËÄÅÈìÅ',
            'bao-bao': 'ÂÆùÂÆù',
            'qiu-qiu-ni': 'Ê±ÇÊ±Ç‰Ω†',
            'hao-bang-a': 'Â•ΩÊ£íÂïä',
            'zhen-xiang': 'ÁúüÈ¶ô',
            'niu-bi': 'ÁâõÈÄº',
            'liu-liu-liu': '666',
            'ba-ba-ba': '888',
            'jiu-jiu-wo': 'ÊïëÊïëÊàë',
            'tai-ku-la': 'Â§™ÈÖ∑Âï¶',
            'chao-ji-bang': 'Ë∂ÖÁ∫ßÊ£í',
            'ni-zui-hao': '‰Ω†ÊúÄÂ•Ω',
            'wo-cao': 'ÊàëÊìç',
            'bu-yao-lian': '‰∏çË¶ÅËÑ∏',
            'gun-dan': 'ÊªöËõã',
            'ni-xing-ma': '‰Ω†Ë°åÂêó',
            'jue-jue-zi': 'ÁªùÁªùÂ≠ê',
            'nei-juan': 'ÂÜÖÂç∑',
            'tang-ping': 'Ë∫∫Âπ≥',
            'po-fang': 'Á†¥Èò≤',
            'gan-jiu-wan-shi': 'Âπ≤Â∞±ÂÆå‰∫ã',
            
            // Two-character pinyin words
            'pengyou': 'ÊúãÂèã',
            'jiaren': 'ÂÆ∂‰∫∫',
            'laoshi': 'ËÄÅÂ∏à',
            'xuesheng': 'Â≠¶Áîü',
            'tongxue': 'ÂêåÂ≠¶',
            'diannao': 'ÁîµËÑë',
            'shouji': 'ÊâãÊú∫',
            'gongzuo': 'Â∑•‰Ωú',
            'xuexi': 'Â≠¶‰π†',
            'kuaile': 'Âø´‰πê',
            'xingfu': 'Âπ∏Á¶è',
            'piaoliang': 'ÊºÇ‰∫Æ',
            'zhongyao': 'ÈáçË¶Å',
            'chenggong': 'ÊàêÂäü',
            'mima': 'ÂØÜÁ†Å',
            'wangluo': 'ÁΩëÁªú',
            'xinxi': '‰ø°ÊÅØ'
        };

        function displayChineseCharacters(password) {
            const chineseDisplay = document.getElementById('chineseDisplay');
            const passwordStyle = document.getElementById('passwordStyle').value;
            
            // Clear previous display
            chineseDisplay.innerHTML = '';
            
            if (passwordStyle === 'sentence') {
                // Extract the Chinese sentence part (before the first number)
                const parts = password.split('-');
                let sentencePart = '';
                for (let part of parts) {
                    if (/^\d+$/.test(part)) break;
                    if (sentencePart) sentencePart += '-';
                    sentencePart += part;
                }
                
                const characters = pinyinToCharacters[sentencePart];
                if (characters) {
                    chineseDisplay.innerHTML = `<span class="chinese-label">Chinese:</span>${characters}`;
                }
            } else {
                // For word chain style, show characters for any pinyin words found
                const parts = password.split('-');
                let foundCharacters = [];
                
                for (let part of parts) {
                    // Check if it's a special character or number
                    if (/^[!@#]$/.test(part) || /^\d+$/.test(part)) continue;
                    
                    // Check lowercase version for matching
                    const lowerPart = part.toLowerCase();
                    if (pinyinToCharacters[lowerPart]) {
                        foundCharacters.push(pinyinToCharacters[lowerPart]);
                    }
                }
                
                if (foundCharacters.length > 0) {
                    chineseDisplay.innerHTML = `<span class="chinese-label">Chinese words:</span>${foundCharacters.join(' ¬∑ ')}`;
                }
            }
        }

        function getRandomSentence(type) {
            let filteredSentences = chineseSentences;
            
            if (type !== 'random') {
                switch(type) {
                    case 'emotional':
                        filteredSentences = chineseSentences.slice(0, 6);
                        break;
                    case 'family':
                        filteredSentences = chineseSentences.slice(6, 11);
                        break;
                    case 'daily':
                        filteredSentences = chineseSentences.slice(11, 19);
                        break;
                    case 'work':
                        filteredSentences = chineseSentences.slice(19, 25);
                        break;
                    case 'motivational':
                        filteredSentences = chineseSentences.slice(37, 42);
                        break;
                    case 'casual':
                        filteredSentences = chineseSentences.slice(31, 37);
                        break;
                    case 'slang':
                        filteredSentences = chineseSentences.slice(48, 137);
                        break;
                }
            }
            
            return filteredSentences[Math.floor(Math.random() * filteredSentences.length)];
        }

        function generateNumberChain(length) {
            let chain = '';
            for (let i = 0; i < length; i++) {
                chain += Math.floor(Math.random() * 10).toString();
            }
            return chain;
        }

        function updateWordList() {
            const language = document.getElementById('wordLanguage').value;
            
            switch(language) {
                case 'english':
                    wordList = [...englishWords];
                    break;
                case 'pinyin':
                    wordList = [...pinyinWords];
                    break;
                case 'mixed':
                    wordList = [...englishWords, ...pinyinWords];
                    break;
                default:
                    wordList = [...englishWords];
            }
        }

        function getRandomWord() {
            return wordList[Math.floor(Math.random() * wordList.length)];
        }

        function getRandomEnglishWord() {
            return englishWords[Math.floor(Math.random() * englishWords.length)];
        }

        function getRandomNumber() {
            return Math.floor(Math.random() * 100).toString();
        }

        function getRandomSpecial() {
            return specialChars[Math.floor(Math.random() * specialChars.length)];
        }

        function applyCaseStyle(word, style, index) {
            switch(style) {
                case 'mixed':
                    return Math.random() > 0.5 ? 
                        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : 
                        word.toLowerCase();
                case 'title':
                    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
                case 'alternate':
                    return index % 2 === 0 ? 
                        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : 
                        word.toLowerCase();
                case 'first':
                    return index === 0 ? 
                        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : 
                        word.toLowerCase();
                default:
                    return word;
            }
        }

        function toggleOptions() {
            const style = document.getElementById('passwordStyle').value;
            const wordChainOptions = document.getElementById('wordChainOptions');
            const sentenceOptions = document.getElementById('sentenceOptions');
            const customOptions = document.getElementById('customOptions');
            const slangPreview = document.getElementById('slangPreview');
            
            // Hide all first
            wordChainOptions.style.display = 'none';
            sentenceOptions.style.display = 'none';
            customOptions.style.display = 'none';
            
            // Show the selected one
            if (style === 'wordchain') {
                wordChainOptions.style.display = 'block';
                updateSlangPreview('wordchain');
            } else if (style === 'sentence') {
                sentenceOptions.style.display = 'block';
                updateSlangPreview('sentence');
            } else if (style === 'custom') {
                customOptions.style.display = 'block';
                updateSlangPreview('custom');
            }
        }

        function updateSlangPreview(mode) {
            const slangExamples = document.getElementById('slangExamples');
            let examples = [];
            
            if (mode === 'sentence' || mode === 'custom') {
                // Show sentence examples
                examples = [
                    { chinese: 'ÊàëÁà±‰Ω†', pinyin: 'wo-ai-ni' },
                    { chinese: 'Âè´Áà∏Áà∏', pinyin: 'jiao-ba-ba' },
                    { chinese: 'Ë∞¢Ë∞¢ËÄÅÊùø', pinyin: 'xie-xie-lao-ban' },
                    { chinese: 'Â∞èÈ≤úËÇâ', pinyin: 'xiao-xian-rou' },
                    { chinese: 'ËêåËêåÂìí', pinyin: 'meng-meng-da' },
                    { chinese: 'ÁªùÁªùÂ≠ê', pinyin: 'jue-jue-zi' },
                    { chinese: 'Ê∞∏‰∏çÊîæÂºÉ', pinyin: 'yong-bu-fang-qi' },
                    { chinese: 'Âä†Ê≤πÂä†Ê≤π', pinyin: 'jia-you-jia-you' },
                    { chinese: '0Âè∑', pinyin: 'ling-hao' },
                    { chinese: '1Âè∑', pinyin: 'yi-hao' },
                    { chinese: 'ÂêåÂøó', pinyin: 'tong-zhi' },
                    { chinese: 'Âü∫Âèã', pinyin: 'ji-you' },
                    { chinese: 'Â∞èÁãºÁãó', pinyin: 'xiao-lang-gou' },
                    { chinese: 'Â∞èÂ•∂Áãó', pinyin: 'xiao-nai-gou' },
                    { chinese: 'Êµ∑Áéã', pinyin: 'hai-wang' },
                    { chinese: 'Ë∫∫Âπ≥', pinyin: 'tang-ping' },
                    { chinese: 'ÂÜÖÂç∑', pinyin: 'nei-juan' },
                    { chinese: 'Á†¥Èò≤', pinyin: 'po-fang' },
                    { chinese: '‰º™Â®ò', pinyin: 'wei-niang' },
                    { chinese: 'ËÄΩÁæé', pinyin: 'dan-mei' },
                    { chinese: 'Á∫¶ÁÇÆ', pinyin: 'yue-pao' },
                    { chinese: 'ÂêÉË±ÜËÖê', pinyin: 'chi-dou-fu' },
                    { chinese: 'ÂºÄÊàø', pinyin: 'kai-fang' },
                    { chinese: 'Áî∑Á•û', pinyin: 'nan-shen' }
                ];
            } else {
                // Show word examples for word chain
                examples = [
                    { chinese: 'ÊúãÂèã', pinyin: 'pengyou' },
                    { chinese: 'ÁîµËÑë', pinyin: 'diannao' },
                    { chinese: 'ÊâãÊú∫', pinyin: 'shouji' },
                    { chinese: 'ÂØÜÁ†Å', pinyin: 'mima' },
                    { chinese: 'ÁΩëÁªú', pinyin: 'wangluo' },
                    { chinese: 'Âø´‰πê', pinyin: 'kuaile' },
                    { chinese: 'Âπ∏Á¶è', pinyin: 'xingfu' },
                    { chinese: 'Â∑•‰Ωú', pinyin: 'gongzuo' },
                    { chinese: 'Â≠¶‰π†', pinyin: 'xuexi' },
                    { chinese: 'ÊàêÂäü', pinyin: 'chenggong' },
                    { chinese: 'Áà±ÊÉÖ', pinyin: 'aiqing' },
                    { chinese: 'Ëá™Áî±', pinyin: 'ziyou' },
                    { chinese: 'Ê¢¶ÊÉ≥', pinyin: 'mengxiang' },
                    { chinese: 'Â∏åÊúõ', pinyin: 'xiwang' },
                    { chinese: 'Êú™Êù•', pinyin: 'weilai' },
                    { chinese: 'ÈùíÊò•', pinyin: 'qingchun' },
                    { chinese: 'Èü≥‰πê', pinyin: 'yinyue' },
                    { chinese: 'ÊóÖÊ∏∏', pinyin: 'lvyou' },
                    { chinese: 'ÁæéÈ£ü', pinyin: 'meishi' },
                    { chinese: 'ÂíñÂï°', pinyin: 'kafei' }
                ];
            }
            
            // Update display
            slangExamples.innerHTML = examples.map(item => 
                `<span class="slang-item"><span class="slang-chinese">${item.chinese}</span><span class="slang-pinyin">${item.pinyin}</span></span>`
            ).join('');
        }

        function generateCustomPassword() {
            const useChineseSentence = document.getElementById('useChineseSentence').checked;
            const useEnglishWords = document.getElementById('useEnglishWords').checked;
            const usePinyinWords = document.getElementById('usePinyinWords').checked;
            const useNumberChain = document.getElementById('useNumberChain').checked;
            
            const elementOrder = document.getElementById('elementOrder').value;
            const sentenceType = document.getElementById('customSentenceType').value;
            const wordCount = parseInt(document.getElementById('customWordCount').value);
            const numberLength = parseInt(document.getElementById('customNumberLength').value);
            const caseStyle = document.getElementById('customCaseStyle').value;
            const includeSpecial = document.getElementById('customIncludeSpecial').checked;
            const separator = document.getElementById('customSeparator').value;
            
            // Check if at least one element is selected
            if (!useChineseSentence && !useEnglishWords && !usePinyinWords && !useNumberChain) {
                alert('Please select at least one element!');
                return;
            }
            
            let elements = [];
            
            // Generate selected elements
            if (useChineseSentence) {
                elements.push({
                    type: 'sentence',
                    value: getRandomSentence(sentenceType)
                });
            }
            
            if (useEnglishWords) {
                for (let i = 0; i < wordCount; i++) {
                    let word = getRandomEnglishWord();
                    elements.push({
                        type: 'english',
                        value: word
                    });
                }
            }
            
            if (usePinyinWords) {
                for (let i = 0; i < wordCount; i++) {
                    let word = pinyinWords[Math.floor(Math.random() * pinyinWords.length)];
                    elements.push({
                        type: 'pinyin',
                        value: word
                    });
                }
            }
            
            if (useNumberChain) {
                elements.push({
                    type: 'number',
                    value: generateNumberChain(numberLength)
                });
            }
            
            // Order elements based on selection
            let orderedElements = orderElements(elements, elementOrder);
            
            // Apply case style
            orderedElements = orderedElements.map((el, index) => {
                if (el.type !== 'number' && el.type !== 'sentence') {
                    el.value = applyCaseStyleCustom(el.value, caseStyle, index);
                }
                return el;
            });
            
            // Build password
            let passwordParts = orderedElements.map(el => el.value);
            let password;
            
            if (separator === 'mixed') {
                // Use different separators
                const separators = ['-', '_', '.'];
                password = '';
                for (let i = 0; i < passwordParts.length; i++) {
                    password += passwordParts[i];
                    if (i < passwordParts.length - 1) {
                        password += separators[Math.floor(Math.random() * separators.length)];
                    }
                }
            } else {
                password = passwordParts.join(separator);
            }
            
            // Add special character if selected
            if (includeSpecial) {
                password += getRandomSpecial();
            }
            
            document.getElementById('generatedPassword').textContent = password;
            displayChineseCharacters(password);
            evaluateStrength(password);
        }
        
        function orderElements(elements, orderType) {
            switch(orderType) {
                case 'random':
                    // Shuffle array
                    for (let i = elements.length - 1; i > 0; i--) {
                        const j = Math.floor(Math.random() * (i + 1));
                        [elements[i], elements[j]] = [elements[j], elements[i]];
                    }
                    return elements;
                    
                case 'sentence-first':
                    return elements.sort((a, b) => {
                        if (a.type === 'sentence') return -1;
                        if (b.type === 'sentence') return 1;
                        return 0;
                    });
                    
                case 'numbers-last':
                    return elements.sort((a, b) => {
                        if (a.type === 'number') return 1;
                        if (b.type === 'number') return -1;
                        return 0;
                    });
                    
                case 'english-first':
                    return elements.sort((a, b) => {
                        if (a.type === 'english') return -1;
                        if (b.type === 'english') return 1;
                        return 0;
                    });
                    
                case 'as-selected':
                default:
                    // Keep original order
                    return elements;
            }
        }
        
        function applyCaseStyleCustom(word, style, index) {
            switch(style) {
                case 'lower':
                    return word.toLowerCase();
                case 'title':
                    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
                case 'first':
                    return index === 0 ? 
                        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : 
                        word.toLowerCase();
                case 'mixed':
                default:
                    return Math.random() > 0.5 ? 
                        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : 
                        word.toLowerCase();
            }
        }

        function generatePassword() {
            const passwordStyle = document.getElementById('passwordStyle').value;
            
            if (passwordStyle === 'sentence') {
                generateSentencePassword();
            } else if (passwordStyle === 'custom') {
                generateCustomPassword();
            } else {
                generateWordChainPassword();
            }
        }

        function generateSentencePassword() {
            const sentenceType = document.getElementById('sentenceType').value;
            const numberLength = parseInt(document.getElementById('numberLength').value);
            const capitalizeEnglish = document.getElementById('capitalizeEnglish').checked;
            const includeSpecial = document.getElementById('includeSpecialSentence').checked;
            
            // Get random Chinese sentence
            let sentence = getRandomSentence(sentenceType);
            
            // Generate number chain
            let numbers = generateNumberChain(numberLength);
            
            // Get random English word
            let englishWord = getRandomEnglishWord();
            if (capitalizeEnglish) {
                englishWord = englishWord.charAt(0).toUpperCase() + englishWord.slice(1);
            }
            
            // Combine parts
            let password = sentence + '-' + numbers + '-' + englishWord;
            
            // Add special character if selected
            if (includeSpecial) {
                password += getRandomSpecial();
            }
            
            document.getElementById('generatedPassword').textContent = password;
            displayChineseCharacters(password);
            evaluateStrength(password);
        }

        function generateWordChainPassword() {
            const wordCount = parseInt(document.getElementById('wordCount').value);
            const caseStyle = document.getElementById('caseStyle').value;
            const includeNumbers = document.getElementById('includeNumbers').checked;
            const includeSpecial = document.getElementById('includeSpecial').checked;
            const specialPosition = document.getElementById('specialPosition').value;
            
            // Make sure word list is updated
            updateWordList();

            let words = [];
            for (let i = 0; i < wordCount; i++) {
                let word = getRandomWord();
                word = applyCaseStyle(word, caseStyle, i);
                words.push(word);
            }

            let passwordParts = [];
            
            if (specialPosition === 'between' && includeSpecial) {
                for (let i = 0; i < words.length; i++) {
                    passwordParts.push(words[i]);
                    if (i < words.length - 1) {
                        passwordParts.push(getRandomSpecial());
                    }
                }
            } else if (specialPosition === 'random' && includeSpecial) {
                passwordParts = [...words];
                const randomIndex = Math.floor(Math.random() * (passwordParts.length + 1));
                passwordParts.splice(randomIndex, 0, getRandomSpecial());
            } else {
                passwordParts = [...words];
            }

            let password = passwordParts.join('-');

            if (includeNumbers) {
                password += '-' + getRandomNumber();
            }

            if (includeSpecial && specialPosition === 'end') {
                password += getRandomSpecial();
            }

            document.getElementById('generatedPassword').textContent = password;
            displayChineseCharacters(password);
            evaluateStrength(password);
        }

        function evaluateStrength(password) {
            let strength = 0;
            const strengthFill = document.getElementById('strengthFill');
            const strengthText = document.getElementById('strengthText');

            if (password.length >= 12) strength++;
            if (password.length >= 16) strength++;
            if (password.length >= 20) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[!@#]/.test(password)) strength++;

            const percentage = (strength / 7) * 100;
            strengthFill.style.width = percentage + '%';

            strengthFill.className = 'strength-fill';
            if (percentage <= 25) {
                strengthFill.classList.add('weak');
                strengthText.className = 'strength-text weak';
                strengthText.textContent = 'Weak';
            } else if (percentage <= 50) {
                strengthFill.classList.add('fair');
                strengthText.className = 'strength-text fair';
                strengthText.textContent = 'Fair';
            } else if (percentage <= 75) {
                strengthFill.classList.add('good');
                strengthText.className = 'strength-text good';
                strengthText.textContent = 'Good';
            } else {
                strengthFill.classList.add('strong');
                strengthText.className = 'strength-text strong';
                strengthText.textContent = 'Strong';
            }
        }

        function copyPassword() {
            const password = document.getElementById('generatedPassword').textContent;
            if (password && password !== 'Click "Generate Password" to create a new password') {
                navigator.clipboard.writeText(password).then(() => {
                    const copyBtn = document.querySelector('.copy-btn');
                    copyBtn.textContent = 'Copied!';
                    copyBtn.classList.add('copied');
                    setTimeout(() => {
                        copyBtn.textContent = 'Copy';
                        copyBtn.classList.remove('copied');
                    }, 2000);
                });
            }
        }

        // Generate an initial password on load
        window.addEventListener('load', generatePassword);
    </script>
</body>
</html>
